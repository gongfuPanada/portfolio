Use some kind of HTML compression.

Get rid of join_path when you don't need it (ie: because the paths are not unknown).

Don't require the extension in load_x and load_x_if_exists.

Load multiple per-page include files.

Make a nice hand-drawn background with pencil.

When the wildcard for list_dir has no wildcard characters, it should still match the pattern specified.

Make sure the site doesn't error-out when the target directory for list_dir doesn't exist.
Test all kinds of unusual circumstances, like missing directories and files.

The pattern matching in list_dir should compare extensions non-case-sensitively.

The code in path.php for choosing the best separator doesn't work the best.
Also, the code in file.php for handling the DIRECTORY_SEPARATOR flag is wrong...
Also, I don't think the path sorting produces the correct results (/ vs _, etc).

Implement the Ajax stuff in /index.php.

------------------

Use Ajax to load only the parts of the page that have changed.

Consider implementing Ajax as follows:
- load the new page into a javascript string
- do a diff between the current page and the new page
- replace the parts that have changed using innerHTML

Consider moving optimize_article_size() to a different location (avoid flicker).

Use Ajax to add/remove project boxes when you click on one of the nav items, to match the new tag list.  Use animation to make the project boxes fade in/out or fly on/off the page to produce the new project-box set.

Many parts of the site could be cached, such as the individual project boxes, and the tags associated with each project.  This would make the project-box code much faster.  Also, entire pages can be cached to some extent.  See <http://phplens.com/lens/php-book/optimizing-debugging-php.php>.

Do we need the onclick for tag items in html/header.php and the add_tags function in projects.js?

We should either use join_path consistently (everywhere) or not use it at all.  It would be better if we didn't need it.  Check all the uses of join_path and see if its really necessary.
